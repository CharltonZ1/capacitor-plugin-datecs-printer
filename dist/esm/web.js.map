{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAE7C,yDAAyD;IACzD,iCAAiC;IACjC,IAAI;IAEJ,KAAK,CAAC,oBAAoB;QACxB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAA6B;QACzC,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,QAA2B;QACzC,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,QAA2C;QACzD,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,SAAS;QACb,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAAuF;QACtG,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAAwC;QACzD,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAuD;QACvE,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAAyE;QACxF,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,QAAmF;QACzG,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAsG;QACxH,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAoF;QACtG,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,SAAS;QACb,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,QAA2B;QACrC,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,QAAyB;QACtC,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { DatecsPrinterPlugin } from './definitions';\n\nexport class DatecsPrinterWeb extends WebPlugin implements DatecsPrinterPlugin {\n\n  // async isSupported(): Promise<{ supported: boolean }> {\n  //   return { supported: false };\n  // }\n\n  async listBluetoothDevices(): Promise<void> {\n    console.log('listBluetoothDevices');\n    return Promise.resolve();\n  }\n\n  async connect(_options: { address: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async disconnect(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async feedPaper(_options: { lines: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printText(_options: { text: string; charset: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printSelfTest(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async getStatus(): Promise<{ status: number }> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async getTemperature(): Promise<{ temperature: number }> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setBarcode(_options: { align: number; small: boolean; scale: number; hri: number; height: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printBarcode(_options: { type: number; data: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printQRCode(_options: { size: number; eccLv: number; data: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printImage(_options: { image: string; width: number; height: number; align: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async drawPageRectangle(_options: { x: number; y: number; width: number; height: number; fillMode: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async drawPageFrame(_options: { x: number; y: number; width: number; height: number; fillMode: number; thickness: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async selectPageMode(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async selectStandardMode(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setPageRegion(_options: { x: number; y: number; width: number; height: number; direction: number }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async printPage(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async write(_options: { bytes: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async writeHex(_options: { hex: string }): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async stopDiscovery(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n}\n"]}