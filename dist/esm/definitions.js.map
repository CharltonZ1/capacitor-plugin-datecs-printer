{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { Plugin } from '@capacitor/core';\r\n\r\nexport interface DatecsPrinterPlugin extends Plugin {\r\n  // isSupported(): Promise<{ supported: boolean }>;\r\n  listBluetoothDevices(): Promise<void>;\r\n  stopDiscovery(): Promise<void>;\r\n  connect(options: { address: string; isAddPayDevice?: boolean }): Promise<void>;\r\n  disconnect(): Promise<void>;\r\n  feedPaper(options: { lines: number }): Promise<void>;\r\n  printText(options: { text: string; charset?: string; isAddPayDevice?: boolean }): Promise<void>;\r\n  printSelfTest(): Promise<void>;\r\n  getStatus(): Promise<{ status: number }>;\r\n  getTemperature(): Promise<{ temperature: number }>;\r\n  setBarcode(options: { align: number; small: boolean; scale: number; hri: number; height: number }): Promise<void>;\r\n  printBarcode(options: { type: number; data: string }): Promise<void>;\r\n  printQRCode(options: { size: number; eccLv: number; data: string }): Promise<void>;\r\n  printImage(options: { image: string; width: number; height: number; align: number }): Promise<void>;\r\n  drawPageRectangle(options: { x: number; y: number; width: number; height: number; fillMode: number }): Promise<void>;\r\n  drawPageFrame(options: { x: number; y: number; width: number; height: number; fillMode: number; thickness: number }): Promise<void>;\r\n  selectPageMode(): Promise<void>;\r\n  selectStandardMode(): Promise<void>;\r\n  setPageRegion(options: { x: number; y: number; width: number; height: number; direction: number }): Promise<void>;\r\n  printPage(): Promise<void>;\r\n  write(options: { bytes: string }): Promise<void>;\r\n  writeHex(options: { hex: string }): Promise<void>;\r\n}"]}